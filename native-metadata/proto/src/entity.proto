// SPDX-FileCopyrightText: 2023 LakeSoul Contributors
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package proto.entity;

option java_multiple_files = true;
option java_package = "com.dmetasoul.lakesoul.meta.entity";

//  A collection of PartitionInfo of one TableInfo
message MetaInfo {
  repeated PartitionInfo listPartition = 1;
  TableInfo tableInfo = 2;
  repeated PartitionInfo readPartitionInfo = 3;
}


//  Meta Information for LakeSoul Table
message TableInfo {
  //  Global unique identifier of table
  string tableId = 1;
  //  Namespace of table. A string of 'tableNamespace.tablePath' or 'tableNamespace.tableName'  maps one unique table globally
  string tableNamespace = 2;
  //  Name of table, optional
  string tableName = 3;
  //  Physical qualified path of table
  string tablePath = 4;
  //  Spark-formatted schema of table
  string tableSchema = 5;
  //  Properties of table, used to tag table with information not tracked by SQL
  string properties = 7;
  //  Partition columns of table. Format of partitions is 'comma_separated_range_column;hash_column'
  string partitions = 8;
  //  Domain this entry belongs to.
  //  Only when rbac feature enabled will have contents different to 'public'
  string domain = 9;
}

//  Version information for specific table range partitions
message PartitionInfo {
  //  TableId of PartitionInfo
  string tableId = 1;
  //  Range partition description, which defines a specific range partition of the table, in the formatted of comma-separated range_colum=range_value
  //  Especially, a table without range partitions use LAKESOUL_NON_PARTITION_TABLE_PART_DESC as partitionDesc
  string partitionDesc = 2;
  //  A version is defined as a number monotonically increasing by 1
  int32 version = 3;
  //  Specific operation of the version information
  CommitOp commitOp = 4;
  //  Timestamp of the PartitionInfo successfully committed
  int64 timestamp = 5;
  //  Collection of commitId of DataCommitInfo included with PartitionInfo
  repeated string snapshot = 7;
  //  Expression used to calculate or filter data, will be launched in the future. Now it's just a meaningless empty string.
  string expression = 8;
  //  Domain this entry belongs to.
  //  Only when rbac feature enabled will have contents different to 'public'
  string domain = 9;
}

//  Namespace of tables
message Namespace {
  //  Dot-separated-formatted namespace
  string namespace = 1;
  string properties = 2;
  string comment = 3;
  //  Domain this entry belongs to.
  //  Only when rbac feature enabled will have contents different to 'public'
  string domain = 4;
}


//  Set of {AppendCommit, CompactionCommit, UpdateCommit, MergeCommit}, which define the specific operation of this DataCommit
enum CommitOp {
  //  CompactionCommit: A commit type indicates that this DataCommit is to compact files in a specific table range partition
  CompactionCommit = 0;
  //  AppendCommit: A commit type indicates that this DataCommit is to append files to a specific table range partition without hash partition
  AppendCommit = 1;
  //  MergeCommit: A commit type indicates that this DataCommit is to append files to a specific table range partition with hash partition
  MergeCommit = 2;
  //  UpdateCommit: A commit type indicates that this DataCommit is to update data(add new files and delete old invalid files) in a specific table range partition
  UpdateCommit = 3;
  //  DeleteCommit: A commit type indicates that this DataCommit is to delete files in a specific table range partition
  DeleteCommit = 4;
}

//  Set of {add, delete}, which define the specific operation of this file
enum FileOp {
  //  add: indicates that the parquet file is newly added
  add = 0;
  //  del: indicates that the parquet file has been deleted
  del = 1;
}

//  Singleton Data File information
message DataFileOp {
  //  Physical qualified path of a parquet file
  string path = 1;
  //  Specific operation of this file
  FileOp fileOp = 2;
  //  File size of byte-unit
  int64 size = 3;
  //  Columns included with this parquet file, which should be equivalent of the meta of parquet file
  string fileExistCols = 4;
}

// Data Files Commit information for specific table range partitions
message DataCommitInfo {
  //  TableId of DataCommit
  string tableId = 1;
  //  Range partition description, which defines a specific range partition of the table, in the formatted of comma-separated range_colum=range_value
  //  Especially, a table without range partitions use LAKESOUL_NON_PARTITION_TABLE_PART_DESC as partitionDesc
  string partitionDesc = 2;
  // Global unique identifier of DataCommit
  string commitId = 3;
  // Collection of DataFileOps included with DataCommit
  repeated DataFileOp fileOps = 4;
  // Specific operation of this DataCommit
  CommitOp commitOp = 5;
  //  Creation timestamp of the files of the DataCommit
  int64 timestamp = 6;
  //   mark define if this DataCommit has already committed as PartitionInfo of table
  bool committed = 7;
  string domain = 8;
}

//  Relationship between 'TableNamespace.TableName' and TableId
message TableNameId {
  //  Name of table
  string tableName = 1;
  //  Global unique identifier of table
  string tableId = 2;
  //  Namespace of table
  string tableNamespace = 3;
  //  Domain this entry belongs to.
  //  Only when rbac feature enabled will have contents different to 'public'
  string domain = 4;
}

//  Relationship between 'TableNamespace.TablePath' and TableId
message TablePathId {
  //  Physical qualified path of table
  string tablePath = 1;
  //  Global unique identifier of table
  string tableId = 2;
  //  Namespace of table
  string tableNamespace = 3;
  //  Domain this entry belongs to.
  //  Only when rbac feature enabled will have contents different to 'public'
  string domain = 4;
}